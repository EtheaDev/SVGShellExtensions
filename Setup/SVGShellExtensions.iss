; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define MyAppName 'Delphi SVG Shell Extensions'
#define MyAppVersion GetFileVersion('SVGShellExtensions.dll')
[Files]
Source: ..\SVGShellExtensions.dll; DestDir: {app}; Flags : regserver sharedfile noregerror
;Source: UnRegister64Bit.bat; DestDir: {app}
;Source: Register64Bit.bat; DestDir: {app}

;Andrà ripristinato
;Source: Updater\DownloadInfo.xml; DestDir: {app}
;Source: Updater\libeay32.dll; DestDir: {app}
;Source: Updater\ssleay32.dll; DestDir: {app}
;Source: Updater\updater.exe; DestDir: {app}

[Setup]
UsePreviousLanguage=no
AppName={#MyAppName}
AppPublisher=Ethea S.r.l.
AppVerName={#MyAppName} {#MyAppVersion}
VersionInfoVersion={#MyAppVersion}
AppPublisherURL=https://www.ethea.it/
AppSupportURL=https://www.ethea.it/supporto/
DefaultDirName={pf}\Ethea\SVGShellExtensions
OutputBaseFileName=SVGShellExtensionsSetup
DisableDirPage=true
Compression=lzma
SolidCompression=true
UsePreviousAppDir=false
AppendDefaultDirName=true
PrivilegesRequired=admin
WindowVisible=false
WizardImageFile=WizEtheaImage.bmp
WizardSmallImageFile=WizEtheaSmallImage.bmp
AppContact=info@ethea.it
SetupIconFile=..\Source\EtheaMultires.ico
DisableProgramGroupPage=true
AppID=SVGShellExtensions
UsePreviousSetupType=false
UsePreviousTasks=false
AlwaysShowDirOnReadyPage=true
AlwaysShowGroupOnReadyPage=true
ShowTasksTreeLines=true
DisableWelcomePage=False
AppCopyright=Copyright © 2021 Ethea S.r.l.
ArchitecturesInstallIn64BitMode=x64
MinVersion=0,6.0

[Languages]
Name: ita; MessagesFile: compiler:Languages\Italian.isl

[Code]
function InitializeSetup(): Boolean;
begin
   Result:=True;
end;

function GetUninstallString(): String;
var
  sUnInstPath: String;
  sUnInstallString: String;
begin
  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppId")}_is1');
  sUnInstallString := '';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  Result := sUnInstallString;
end;

function IsUpgrade(): Boolean;
var
  s : string;
begin
  s := GetUninstallString();
  //MsgBox('GetUninstallString '+s, mbInformation, MB_OK);
  Result := (s <> '');
end;

function UnInstallOldVersion(): Integer;
var
  sUnInstallString: String;
  iResultCode: Integer;
begin
// Return Values:
// 1 - uninstall string is empty
// 2 - error executing the UnInstallString
// 3 - successfully executed the UnInstallString

  // default return value
  Result := 0;

  // get the uninstall string of the old app
  sUnInstallString := GetUninstallString();
  if sUnInstallString <> '' then begin
    sUnInstallString := RemoveQuotes(sUnInstallString);
    if Exec(sUnInstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES', '', SW_HIDE, ewWaitUntilTerminated, iResultCode) then
      Result := 3
    else
      Result := 2;
  end else
    Result := 1;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if (CurStep=ssInstall) then
  begin
    if (IsUpgrade()) then
    begin
      MsgBox(ExpandConstant('An old version of SVG Shell Extensions was detected. The uninstaller will be executed'), mbInformation, MB_OK);
      UnInstallOldVersion();
    end;
  end;
end;
